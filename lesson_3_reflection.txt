When would you want to use a remote repository rather than keeping all your work
local?

    A remote repository works well if you are updating it from multiple
    locations or if multiple people are working on the same repo.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You could do things manually so that you can work on things locally without
    always having to worry about merging.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Clones are copies of a repository. Forks are like clones, but on GitHub.
    You can fork if you want a copy of somebody's repo. Then clone it to your
    local machine. Branches are just different versions of the same repository.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Having the last known state of the remote will make merges easier.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Collaborating without git or github could be done with other version control
    software like mercurial, or it can be done manually by saving multiple
    versions of files and keeping track of the changes.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    You want to make changes in a separate branch if you're not the one in
    charge of the repository. Then you can do pull requests if you want your
    code merged in with the master branch.
