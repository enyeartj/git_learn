To cache your github password in git:
    https://help.github.com/articles/caching-your-github-password-in-git/

Check remote repositorites current repo is linked to:
    git remote

Add a new remote repository after you make it on github:
    git remote add <remote_name> <remote_url>
    (remote_name is usually "origin")

Get verbose information (push and fetch) on remotes:
    git remote -v

Push a branch to the remote (just going to call it "origin" from now on):
    git push origin <branch_name>

You can create files on GitHub and then pull/fetch to local:
    git pull origin master
    (git pull <remote> <branch>)

You can "clone" a GitHub repo using GitHub's Fork
Once you Fork, you can clone to your local machine
    git clone <repo_url>
And check that remote is setup
    git remote -v

Add collaborators to a GitHub repo by going to repo settings>Collaborators

To get the version on the remote while leaving yours alone, run:
    git fetch <remote>
You can then use
    git log
    git diff
To see what differences are between local and remote repositories

git pull first performs a fetch and then merges local branch into remote, ie:
    git pull origin master
    SAME AS:
    git fetch origin
    git merge origin origin/master

To view both local AND remote branches, use:
    git branch -a

When collaborating on GitHub, you should generally make a new branch for
changes:
    git branch <change_branch>
    git checkout <change_branch>
Make and commit the changes, and then do a Pull Request on github
    go to your new branch, then click New Pull Request
